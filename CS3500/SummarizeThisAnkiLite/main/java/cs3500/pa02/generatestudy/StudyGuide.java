package cs3500.pa02.generatestudy;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

/**
 * Represents a study guide that summarizes .md files by their headings and important.
 */
public class StudyGuide {

  /**
   * Represents a list of headings in a study guide.
   */
  private final List<Heading> summaries = new ArrayList<>();

  /**
   * Instantiates a new Study guide with empty contents.
   */
  public StudyGuide() {
  }

  /**
   * Instantiates a new Study guide.
   *
   * @param summaries list of headings to start a study guide with
   */
  public StudyGuide(Collection<? extends Heading> summaries) {
    this.summaries.addAll(summaries);
  }

  /**
   * Overrides toString in class Object. Converts this study guide and all of its headings into a
   * single string and returns that string
   *
   * @return the headings of this study guide (and their contents) as a single String
   */
  @Override
  public String toString() {
    return this.summaries.stream().map(Heading::toString)
        .collect(Collectors.joining("\n\n"));
  }

  /**
   * Updates summaries by adding the given heading to the list of headings.
   *
   * @param heading the heading to be added to the summaries
   */
  public void updateSummaries(Heading heading) {
    this.summaries.add(heading);
  }

  /**
   * Determines if a given obj and this study guide are equal based on their summaries.
   *
   * @param obj the object this study guide is being compared to
   * @return whether the given object and this study guide are equal
   */
  @Override
  public boolean equals(Object obj) {
    boolean result = false;
    if (obj != null) {
      if (this.getClass() == obj.getClass()) {
        StudyGuide other = (StudyGuide) obj;
        result = this.toString().equals(other.toString());
      }
    }
    return result;
  }

  /**
   * Returns the hashCode for this study guide that's used for bucketing in Hash implementations
   *
   * @return hash generated by the hashing algorithm
   */
  @Override
  public int hashCode() {
    return Objects.hash(this.summaries);
  }
}


